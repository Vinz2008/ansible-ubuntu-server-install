version: '3'

services:
  portainer:
    image: portainer/portainer-ce:latest
    container_name: portainer
    restart: unless-stopped
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - portainer_data:/data
    ports:
      - 9943:9943
      - 9003:8000
      - 9000:9000

  dashdot:
    image: mauricenino/dashdot
    container_name: dashdot
    restart: unless-stopped
    ports:
      - 8002:3001
    privileged: true
    volumes:
      - /:/mnt/host:ro
  homarr:
    image: ghcr.io/ajnart/homarr:latest
    container_name: homarr
    restart: unless-stopped
    ports:
      - '7575:7575'
    volumes:
      - /home/vincent/homarr/configs:/app/data/configs
      - /home/vincent/homarr/data:/data
      - /home/vincent/homarr/icons:/app/public/icons
      - /var/run/docker.sock:/var/run/docker.sock 
  jackett:
    image : linuxserver/jackett:latest
    container_name: jackett
    restart: unless-stopped
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=Europe/Paris
      - AUTO_UPDATE=true #optional
    volumes:
      - /home/vincent/jackett/config:/config
      - "{{ share_root }}/downloads:/downloads"
    ports:
      - 9117:9117
  flaresolverr:
    image: ghcr.io/flaresolverr/flaresolverr:latest
    container_name: flaresolverr
    restart: unless-stopped
    ports:
      - 8191:8191
#   suwayomi:
#     container_name: suwayomi
#     image: ghcr.io/suwayomi/tachidesk:latest
#     environment:
#       - PUID=1000
#       - PGID=1000
#       - TZ=Europe/Paris 
#       - FLARESOLVERR_ENABLED=true
#       - FLARESOLVERR_URL=http://192.168.1.3:8191
# #    example for setting env vars:
# #
# #      - BIND_IP=0.0.0.0
# #      - BIND_PORT=4567
# #      - SOCKS_PROXY_ENABLED=false
# #      - DOWNLOAD_AS_CBZ=true
# #      - BASIC_AUTH_ENABLED=true
# #      - BASIC_AUTH_USERNAME=manga
# #      - BASIC_AUTH_PASSWORD=hello123
#     volumes:
#       - /home/vincent/Tachidesk/data:/home/suwayomi/.local/share/Tachidesk
#     ports:
#       - "4567:4567"
#     restart: on-failure
  teemii-frontend:
    container_name: teemii-frontend
    image: dokkaner/teemii-frontend:latest
    ports:
      - "8080:80"
    networks:
      - teemii-network
    environment:
      - VITE_APP_TITLE=Teemii
      - VITE_APP_PORT=80

  teemii-backend:
    container_name: teemii-backend
    image: dokkaner/teemii-backend:latest
    volumes:
      - /home/vincent/teemii/data:/data
    networks:
      - teemii-network
    environment:
      - EXPRESS_PORT=3000
      - SOCKET_IO_PORT=1555

  jellyseerr:
    image: fallenbagel/jellyseerr:latest
    container_name: jellyseerr
    restart: unless-stopped
    environment:
      - LOG_LEVEL=debug
      - TZ=Europe/Paris
    ports:
      - 5055:5055
    volumes:
      - /home/vincent/jellyseer/config:/app/config
  kavita:
    image: kizaing/kavita:latest
    container_name: kavita
    restart: unless-stopped
    volumes:
      - "{{ share_root }}/books:/books"
      - /home/vincent/kavita/data:/kavita/config
    environment:
      - TZ=Europe/Paris
    ports:
      - 5000:5000
  # ouroboros:
  #   image: pyouroboros/ouroboros
  #   container_name: ouroboros
  #   restart: unless-stopped
  #   volumes:
  #     - /var/run/docker.sock:/var/run/docker.sock
  watchtower:
    image: containrrr/watchtower
    container_name: watchtower
    restart: unless-stopped
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
  radarr:
    image: lscr.io/linuxserver/radarr:latest
    container_name: radarr
    restart: unless-stopped
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=Europe/Paris
    volumes:
      - /home/vincent/radarr/config:/config
      - "{{ share_root }}/films:/movies" #optional
      - "{{ share_root }}/downloads:/downloads" #optional
    ports:
      - 7878:7878
  sonarr:
    image: lscr.io/linuxserver/sonarr:latest
    container_name: sonarr
    restart: unless-stopped
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=Europe/Paris
      - DOCKER_MODS=ghcr.io/gilbn/theme.park:sonarr
      - TP_ADDON=sonarr-darker
    volumes:
      - /home/vincent/sonarr/config:/config
      - "{{ share_root }}/series:/tv" #optional
      - "{{ share_root }}/downloads:/downloads" #optional
    ports:
      - 8989:8989
  bazarr:
    image: lscr.io/linuxserver/bazarr:latest
    container_name: bazarr
    restart: unless-stopped
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=Europe/Paris
    volumes:
      - /home/vincent/bazarr/config:/config
      - "{{ share_root }}/films:/movies" #optional
      - "{{ share_root }}/series:/tv" #optional
    ports:
      - 6767:6767
  prowlarr:
    image: lscr.io/linuxserver/prowlarr:develop
    container_name: prowlarr
    restart: unless-stopped
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=Europe/Paris
    volumes:
      - /home/vincent/prowlarr/config:/config
    ports:
      - 9696:9696
  readarr:
    image: lscr.io/linuxserver/readarr:develop
    container_name: readarr
    restart: unless-stopped
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=Europe/Paris
    volumes:
      - /home/vincent/readarr/config:/config
      - "{{ share_root }}/books:/books" #optional
      - "{{ share_root }}/downloads:/downloads"
    ports: 
      - 8787:8787

  transmission:
    image: lscr.io/linuxserver/transmission:latest
    container_name: transmission
    restart: unless-stopped
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=Europe/Paris
      - USER=transmission #optional
      - "PASS={{ password }}" #optional
    volumes:
      - /home/vincent/transmission/config:/config
      - "{{ share_root }}/downloads:/downloads"
      - /home/vincent/transmission/watch:/watch
    ports:
      - 9091:9091
      - 51413:51413
      - 51413:51413/udp
  code-server:
    image: lscr.io/linuxserver/code-server:latest
    container_name: code-server
    restart: unless-stopped
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=Europe/Paris
      - PASSWORD={{ password }}
      - SUDO_PASSWORD={{ password }}
    volumes:
      - /home/vincent/code-server/config:/config
    ports:
      - 8443:8443
  cloudflare-ddns:
    image: oznu/cloudflare-ddns:latest
    container_name: cloudflare
    restart: unless-stopped
    environment:
      - API_KEY={{ cloudflare_token }}
      - ZONE=vincent-nas.fr
#      - SUBDOMAIN=subdomain
      - PROXIED=false
  #cloudflare-ddns-jellyfin:
  #  image: oznu/cloudflare-ddns:latest
  #  container_name: cloudflare-jellyfin
  #  restart: unless-stopped
  #  environment:
  #    - API_KEY={{ cloudflare_token }}
  #    - ZONE=vincent-nas.fr
  #    - SUBDOMAIN=jellyfin
  #    - PROXIED=false
#  caddy:
#    image: caddy:latest
#    container_name: caddy
#    restart: unless-stopped
#    ports:
#      - "80:80"
#      - "443:443"
#      - "443:443/udp"
#    volumes:
#      - /home/vincent/caddy/config:/config
#      - /home/vincent/caddy/data:/data
#      - /home/vincent/caddy/caddyfile/Caddyfile:/etc/caddy/Caddyfile
  nginx_proxy:
    container_name: nginx_proxy
    image: 'jc21/nginx-proxy-manager:latest'
    restart: unless-stopped
    ports:
      - '80:80'
      - '81:81'
      - '443:443'
    volumes:
      - /home/vincent/nginx-proxy/data:/data
      - /home/vincent/nginx-proxy/letsencrypt:/etc/letsencrypt
      - /home/vincent/nginx-proxy/98-themepark:/etc/cont-init.d/98-themepark
    environment:
      - TP_THEME=organizr

  mariadb_nextcloud:
    image: "mariadb:latest"
    restart: unless-stopped
    container_name: mariadb
    command: --transaction-isolation=READ-COMMITTED --binlog-format=ROW
    volumes:
      - mariadb_nextcloud_data:/var/lib/mysql
    environment:
      - "MYSQL_ROOT_PASSWORD={{ password }}"
      - MYSQL_DATABASE=nextcloud
      - MYSQL_USER=nextcloud
      - "MYSQL_PASSWORD={{ password }}"
  gitea:
    image: "gitea/gitea"
    container_name: gitea
    environment:
      - USER_UID=1000
      - USER_GID=1000
    restart: unless-stopped
    volumes:
      - /home/vincent/gitea:/data
      - /etc/timezone:/etc/timezone:ro
      - /etc/localtime:/etc/localtime:ro
    ports:
      - "3000:3000"
      - "222:22"
  mirror-to-gitea:
    image: jaedle/mirror-to-gitea:latest
    restart: unless-stopped
    environment:
      - GITHUB_USERNAME=Vinz2008
      - GITEA_URL=http://192.168.1.3:3000
      - "GITEA_TOKEN={{gitea_token}}"
      #- GITHUB_TOKEN=please-exchange-with-token # Optional, set to mirror private repos
      #- MIRROR_PRIVATE_REPOSITORIES=true # Optional, set to mirror private repos
      # - DELAY=3600 # Optional, set to change the delay between checks (in seconds)
    container_name: mirror-to-gitea
  nextcloud:
    image: "nextcloud:latest"
    container_name: nextcloud
    restart: unless-stopped
    ports:
      - 8084:80
      - 8085:443
    links:
      - mariadb_nextcloud:mariadb
    volumes:
      - /home/vincent/nextcloud/config:/var/www/html/config
      - nextcloud_data:/var/www/html
#      - "{{ files_root }}:/var/www/html/data"
      - /home/vincent/nextcloud/data:/var/www/html/data
      - "{{ share_root }}:/share_root"
    environment:
      - "MYSQL_PASSWORD={{ password }}"
      - MYSQL_DATABASE=nextcloud
      - MYSQL_USER=nextcloud
      - MYSQL_HOST=mariadb


  papermc:
    image: marctv/minecraft-papermc-server:latest
    container_name: mcserver
    restart: unless-stopped
    environment:
      - MEMORYSIZE=2G
    volumes:
      - /home/vincent/mcserver:/data:rw
    ports:
      - 25565:25565

  duckdns:
    image: lscr.io/linuxserver/duckdns:latest
    container_name: duckdns
    environment:
      - PUID=1000 #optional
      - PGID=1000 #optional
      - TZ=Europe/London
      - SUBDOMAINS={{ duckdns_domain}}
      - TOKEN={{ duckdns_token }}
      - LOG_FILE=false #optional
    volumes:
      - /home/vincent/duckdns/config:/config #optional
    restart: unless-stopped

  onlyoffice-documentserver:
    image: onlyoffice/documentserver
    container_name: onlyoffice-documentserver
    depends_on:
      - onlyoffice-postgresql
      - onlyoffice-rabbitmq
    environment:
      - DB_TYPE=postgres
      - DB_HOST=onlyoffice-postgresql
      - DB_PORT=5432
      - DB_NAME=onlyoffice
      - DB_USER=onlyoffice
      - AMQP_URI=amqp://guest:guest@onlyoffice-rabbitmq
      # Uncomment strings below to enable the JSON Web Token validation.
      - JWT_ENABLED=true
      - JWT_SECRET={{ password }}
      - JWT_HEADER=Authorization
      - JWT_IN_BODY=true
    ports:
      - '8086:80'
    stdin_open: true
    restart: unless-stopped
    stop_grace_period: 60s
    volumes:
       - /home/vincent/onlyoffice/data:/var/www/onlyoffice/Data
       - /home/vincent/onlyoffice/logs:/var/log/onlyoffice
       - /home/vincent/onlyoffice/cache_files:/var/lib/onlyoffice/documentserver/App_Data/cache/files
       - /home/vincent/onlyoffice/example_files:/var/www/onlyoffice/documentserver-example/public/files
       - /home/vincent/onlyoffice/fonts:/usr/share/fonts
       
  onlyoffice-rabbitmq:
    container_name: onlyoffice-rabbitmq
    image: rabbitmq
    restart: always
    expose:
      - '5672'

  onlyoffice-postgresql:
    container_name: onlyoffice-postgresql
    image: postgres:9.5
    environment:
      - POSTGRES_DB=onlyoffice
      - POSTGRES_USER=onlyoffice
      - POSTGRES_HOST_AUTH_METHOD=trust
    restart: always
    expose:
      - '5432'
    volumes:
      - postgresql_data:/var/lib/postgresql
  photoprism:
    restart: unless-stopped
    container_name: photoprism
    image: photoprism/photoprism:latest
    security_opt:
      - seccomp:unconfined
      - apparmor:unconfined
    depends_on:
      - mariadb_photoprism
    environment:
      - PHOTOPRISM_ADMIN_USER=vincent
      - PHOTOPRISM_ADMIN_PASSWORD={{ password }}
      - PHOTOPRISM_AUTH_MODE=password
      - PHOTOPRISM_ORIGINALS_LIMIT=5000
      - PHOTOPRISM_HTTP_COMPRESSION=gzip
      - PHOTOPRISM_LOG_LEVEL=info
      - PHOTOPRISM_DISABLE_TENSORFLOW=false
      - PHOTOPRISM_DISABLE_FACES=false
      - PHOTOPRISM_DISABLE_CLASSIFICATION=false
      - PHOTOPRISM_JPEG_QUALITY=85 
      - PHOTOPRISM_DATABASE_SERVER=mariadb_photoprism:3306
      - PHOTOPRISM_DATABASE_NAME=photoprism
      - PHOTOPRISM_DATABASE_USER=photoprism
      - PHOTOPRISM_DATABASE_PASSWORD={{ password }}
      - PHOTOPRISM_SITE_CAPTION=AI-Powered Photos App
      - PHOTOPRISM_SITE_DESCRIPTION=
      - PHOTOPRISM_SITE_AUTHOR=
    ports:
      - "2342:2342"
    working_dir: "/photoprism"
    volumes:
      # "/host/folder:/photoprism/folder"                # Example
      - "{{ share_root }}/pictures:/photoprism/originals"               # Original media files (DO NOT REMOVE)
      # - "/example/family:/photoprism/originals/family" # *Additional* media folders can be mounted like this
      # - "~/Import:/photoprism/import"                  # *Optional* base folder from which files can be imported to originals
      - "/home/vincent/photoprism/storage:/photoprism/storage"                  # *Writable* storage folder for cache, database, and sidecar files (DO NOT REMOVE)
  mariadb_photoprism:
    restart: unless-stopped
    container_name: mariadb_photoprism
    image: mariadb:latest
    security_opt: # see https://github.com/MariaDB/mariadb-docker/issues/434#issuecomment-1136151239
      - seccomp:unconfined
      - apparmor:unconfined
    command: mysqld --innodb-buffer-pool-size=512M --transaction-isolation=READ-COMMITTED --character-set-server=utf8mb4 --collation-server=utf8mb4_unicode_ci --max-connections=512 --innodb-rollback-on-timeout=OFF --innodb-lock-wait-timeout=120
    volumes:
      - mariadb_photoprism_data:/var/lib/mysql # DO NOT REMOVE
    environment:
      - MARIADB_AUTO_UPGRADE=1
      - MARIADB_INITDB_SKIP_TZINFO=1
      - MARIADB_DATABASE=photoprism
      - MARIADB_USER=photoprism
      - MARIADB_PASSWORD={{ password }}
      - MARIADB_ROOT_PASSWORD={{ password }}
  n8n:
    restart: unless-stopped
    container_name: n8n
    image: n8nio/n8n
    volumes:
      - /home/vincent/n8n:/home/node/.n8n
    ports:
      - 5678:5678
  windows-vm:
    image: dockurr/windows
    container_name: windows
    devices:
      - /dev/kvm
    cap_add:
      - NET_ADMIN
    ports:
      - 8006:8006
      - 3389:3389/tcp
      - 3389:3389/udp
    volumes:
      - "{{ share_root }}/vm/windows:/storage"
    stop_grace_period: 2m
    restart: on-failure
  netdata:
    image: netdata/netdata
    container_name: netdata
    ports:
      - '19999:19999'
    pid: host
    #network_mode: host
    restart: unless-stopped
    cap_add:
      - SYS_PTRACE
      - SYS_ADMIN
    security_opt:
      - apparmor:unconfined
    volumes:
      - netdataconfig:/etc/netdata
      - netdatalib:/var/lib/netdata
      - netdatacache:/var/cache/netdata
      - /etc/passwd:/host/etc/passwd:ro
      - /etc/group:/host/etc/group:ro
      - /etc/localtime:/etc/localtime:ro
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /etc/os-release:/host/etc/os-release:ro
      - /var/log:/host/var/log:ro
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - /run/dbus:/run/dbus:ro

volumes:
  portainer_data:
  mariadb_nextcloud_data:
  mariadb_photoprism_data:
  nextcloud_data:
  postgresql_data:
  netdataconfig:
  netdatalib:
  netdatacache:

networks:
  teemii-network:
    driver: bridge
